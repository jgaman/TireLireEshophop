// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TireLireEshop;

namespace TireLireEshop.Migrations
{
    [DbContext(typeof(dbtirelireshopContext))]
    partial class dbtirelireshopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TireLireEshop.Avis", b =>
                {
                    b.Property<int>("PkIdAvis")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PK_ID_avis")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contenu")
                        .HasColumnName("contenu")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("IdClient")
                        .HasColumnName("ID_client")
                        .HasColumnType("int");

                    b.Property<int>("IdProduit")
                        .HasColumnName("ID_produit")
                        .HasColumnType("int");

                    b.Property<bool>("StatutValidation")
                        .HasColumnName("statut_validation")
                        .HasColumnType("bit");

                    b.HasKey("PkIdAvis");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdProduit");

                    b.ToTable("Avis");
                });

            modelBuilder.Entity("TireLireEshop.Clients", b =>
                {
                    b.Property<int>("PkIdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PK_ID_client")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnName("nom")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnName("prenom")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("StatutDuCompte")
                        .HasColumnName("statut_du_compte")
                        .HasColumnType("bit");

                    b.HasKey("PkIdClient");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TireLireEshop.Commandes", b =>
                {
                    b.Property<int>("PkIdCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PK_ID_commande")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<int>("IdClient")
                        .HasColumnName("ID_client")
                        .HasColumnType("int");

                    b.Property<int>("IdStatutCommande")
                        .HasColumnName("ID_statut_commande")
                        .HasColumnType("int");

                    b.HasKey("PkIdCommande");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdStatutCommande");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("TireLireEshop.Couleur", b =>
                {
                    b.Property<int>("PkIdCouleur")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PK_ID_couleur")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnName("nom")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PkIdCouleur");

                    b.ToTable("Couleur");
                });

            modelBuilder.Entity("TireLireEshop.DetailsCommande", b =>
                {
                    b.Property<int>("PkIdDetailsCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PK_ID_details_commande")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCommande")
                        .HasColumnName("ID_commande")
                        .HasColumnType("int");

                    b.Property<int>("IdProduit")
                        .HasColumnName("ID_produit")
                        .HasColumnType("int");

                    b.Property<decimal>("Prix")
                        .HasColumnName("prix")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("Quantité")
                        .HasColumnName("quantité")
                        .HasColumnType("int");

                    b.HasKey("PkIdDetailsCommande");

                    b.HasIndex("IdCommande");

                    b.HasIndex("IdProduit");

                    b.ToTable("Details_commande");
                });

            modelBuilder.Entity("TireLireEshop.Fabricant", b =>
                {
                    b.Property<int>("PkIdFabricant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PK_ID_fabricant")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnName("adresse")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnName("nom")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PkIdFabricant");

                    b.ToTable("Fabricant");
                });

            modelBuilder.Entity("TireLireEshop.Image", b =>
                {
                    b.Property<int>("PkIdImage")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PK_ID_image")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheminDAcces")
                        .IsRequired()
                        .HasColumnName("chemin_d_acces")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProduit")
                        .HasColumnName("ID_produit")
                        .HasColumnType("int");

                    b.HasKey("PkIdImage");

                    b.HasIndex("IdProduit");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("TireLireEshop.Produits", b =>
                {
                    b.Property<int>("PkIdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PK_ID_produit")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CapacitéEnNombreDePiece")
                        .HasColumnName("capacité_en_nombre_de_piece")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionParLeFabricant")
                        .IsRequired()
                        .HasColumnName("description_par_le_fabricant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Hauteur")
                        .HasColumnName("hauteur")
                        .HasColumnType("float");

                    b.Property<int>("IdCouleur")
                        .HasColumnName("ID_couleur")
                        .HasColumnType("int");

                    b.Property<int>("IdFabricant")
                        .HasColumnName("ID_fabricant")
                        .HasColumnType("int");

                    b.Property<int>("IdImage")
                        .HasColumnName("ID_image")
                        .HasColumnType("int");

                    b.Property<double>("Largeur")
                        .HasColumnName("largeur")
                        .HasColumnType("float");

                    b.Property<double>("Longueur")
                        .HasColumnName("longueur")
                        .HasColumnType("float");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnName("nom")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Poids")
                        .HasColumnName("poids")
                        .HasColumnType("float");

                    b.Property<decimal>("Prix")
                        .HasColumnName("prix")
                        .HasColumnType("money");

                    b.Property<bool>("StatutDActivtion")
                        .HasColumnName("statut_d_activtion")
                        .HasColumnType("bit");

                    b.HasKey("PkIdProduit");

                    b.HasIndex("IdCouleur");

                    b.HasIndex("IdFabricant");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("TireLireEshop.StatutCommande", b =>
                {
                    b.Property<int>("PkIdStatutCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PK_ID_statut_commande")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatutCommande1")
                        .IsRequired()
                        .HasColumnName("statut_commande")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PkIdStatutCommande");

                    b.ToTable("Statut_commande");
                });

            modelBuilder.Entity("TireLireEshop.Avis", b =>
                {
                    b.HasOne("TireLireEshop.Clients", "IdClientNavigation")
                        .WithMany("Avis")
                        .HasForeignKey("IdClient")
                        .HasConstraintName("FK_Avis_Clients")
                        .IsRequired();

                    b.HasOne("TireLireEshop.Produits", "IdProduitNavigation")
                        .WithMany("Avis")
                        .HasForeignKey("IdProduit")
                        .HasConstraintName("FK_Avis_Produits")
                        .IsRequired();
                });

            modelBuilder.Entity("TireLireEshop.Commandes", b =>
                {
                    b.HasOne("TireLireEshop.Clients", "IdClientNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("IdClient")
                        .HasConstraintName("FK_Commandes_Clients")
                        .IsRequired();

                    b.HasOne("TireLireEshop.StatutCommande", "IdStatutCommandeNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("IdStatutCommande")
                        .HasConstraintName("FK_Commandes_Statut_commande")
                        .IsRequired();
                });

            modelBuilder.Entity("TireLireEshop.DetailsCommande", b =>
                {
                    b.HasOne("TireLireEshop.Commandes", "IdCommandeNavigation")
                        .WithMany("DetailsCommande")
                        .HasForeignKey("IdCommande")
                        .HasConstraintName("FK_Details_commande_Commandes")
                        .IsRequired();

                    b.HasOne("TireLireEshop.Produits", "IdProduitNavigation")
                        .WithMany("DetailsCommande")
                        .HasForeignKey("IdProduit")
                        .HasConstraintName("FK_Details_commande_Produits")
                        .IsRequired();
                });

            modelBuilder.Entity("TireLireEshop.Image", b =>
                {
                    b.HasOne("TireLireEshop.Produits", "IdProduitNavigation")
                        .WithMany("Image")
                        .HasForeignKey("IdProduit")
                        .HasConstraintName("FK_Image_Produits")
                        .IsRequired();
                });

            modelBuilder.Entity("TireLireEshop.Produits", b =>
                {
                    b.HasOne("TireLireEshop.Couleur", "IdCouleurNavigation")
                        .WithMany("Produits")
                        .HasForeignKey("IdCouleur")
                        .HasConstraintName("FK_Produits_Couleur")
                        .IsRequired();

                    b.HasOne("TireLireEshop.Fabricant", "IdFabricantNavigation")
                        .WithMany("Produits")
                        .HasForeignKey("IdFabricant")
                        .HasConstraintName("FK_Produits_Fabricant")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
